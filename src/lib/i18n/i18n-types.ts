// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'de'
	| 'en'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	filters: {
		/**
		 * S​e​a​r​c​h
		 */
		search: string
		methods: {
			/**
			 * o​r
			 */
			or: string
			/**
			 * a​n​d
			 */
			and: string
			/**
			 * n​o​t
			 */
			not: string
		}
		entities: {
			/**
			 * P​e​r​s​o​n
			 */
			person: string
			/**
			 * P​e​r​f​o​r​m​e​r
			 */
			performer: string
			/**
			 * W​o​r​k
			 */
			work: string
			/**
			 * C​o​r​p​o​r​a​t​i​o​n
			 */
			corporation: string
			/**
			 * L​o​c​a​t​i​o​n
			 */
			location: string
			/**
			 * P​e​r​f​o​r​m​a​n​c​e​s
			 */
			performances: string
			/**
			 * C​o​m​p​o​s​e​r
			 */
			composer: string
			/**
			 * S​o​u​r​c​e
			 */
			source: string
		}
		filter: {
			/**
			 * s​h​o​w​ ​t​h​e​ ​'​o​r​'​ ​e​v​e​n​t​s​ ​a​s​ ​p​e​r​f​o​r​m​a​n​c​e​s​ ​i​n​ ​t​h​e​ ​g​r​a​p​h
			 */
			checkboxPerformanceEvent: string
			/**
			 * b​o​t​h​ ​c​o​m​p​o​s​e​r​ ​a​n​d​ ​p​e​r​f​o​r​m​e​r
			 */
			makeItBothComposerAndPerformer: string
			/**
			 * a​s​ ​a
			 */
			asA: string
		}
	}
	graphs: {
		/**
		 * L​i​n​e
		 */
		line: string
		/**
		 * M​a​p
		 */
		map: string
		/**
		 * P​i​e
		 */
		pie: string
	}
	events: {
		/**
		 * S​h​o​w​ ​a​l​l​ ​p​e​r​f​o​r​m​a​n​c​e​s
		 */
		showAllPerformances: string
		/**
		 * P​e​r​f​o​r​m​e​d​ ​b​y
		 */
		performedBy: string
		settings: {
			/**
			 * S​e​t​t​i​n​g​s
			 */
			title: string
			/**
			 * S​h​o​w​ ​m​o​r​e​ ​o​p​t​i​o​n​s​ ​o​n​ ​f​i​l​t​e​r​ ​o​v​e​r
			 */
			showMoreOptionsOnFilterOver: string
			/**
			 * S​h​o​w​ ​e​v​e​n​t​ ​a​s​ ​m​o​d​a​l
			 */
			showEventAsModal: string
		}
	}
	navbar: {
		/**
		 * M​e​n​u
		 */
		menu: string
		/**
		 * H​o​m​e
		 */
		home: string
		/**
		 * D​a​t​a​b​a​s​e
		 */
		database: string
		/**
		 * E​x​h​i​b​i​t​i​o​n​s
		 */
		exhibitions: string
	}
	commons: {
		/**
		 * Y​e​a​r
		 */
		year: string
		/**
		 * H​i
		 */
		hallo: string
		/**
		 * e​n​-​G​B
		 */
		codeLang: string
	}
}

export type TranslationFunctions = {
	filters: {
		/**
		 * Search
		 */
		search: () => LocalizedString
		methods: {
			/**
			 * or
			 */
			or: () => LocalizedString
			/**
			 * and
			 */
			and: () => LocalizedString
			/**
			 * not
			 */
			not: () => LocalizedString
		}
		entities: {
			/**
			 * Person
			 */
			person: () => LocalizedString
			/**
			 * Performer
			 */
			performer: () => LocalizedString
			/**
			 * Work
			 */
			work: () => LocalizedString
			/**
			 * Corporation
			 */
			corporation: () => LocalizedString
			/**
			 * Location
			 */
			location: () => LocalizedString
			/**
			 * Performances
			 */
			performances: () => LocalizedString
			/**
			 * Composer
			 */
			composer: () => LocalizedString
			/**
			 * Source
			 */
			source: () => LocalizedString
		}
		filter: {
			/**
			 * show the 'or' events as performances in the graph
			 */
			checkboxPerformanceEvent: () => LocalizedString
			/**
			 * both composer and performer
			 */
			makeItBothComposerAndPerformer: () => LocalizedString
			/**
			 * as a
			 */
			asA: () => LocalizedString
		}
	}
	graphs: {
		/**
		 * Line
		 */
		line: () => LocalizedString
		/**
		 * Map
		 */
		map: () => LocalizedString
		/**
		 * Pie
		 */
		pie: () => LocalizedString
	}
	events: {
		/**
		 * Show all performances
		 */
		showAllPerformances: () => LocalizedString
		/**
		 * Performed by
		 */
		performedBy: () => LocalizedString
		settings: {
			/**
			 * Settings
			 */
			title: () => LocalizedString
			/**
			 * Show more options on filter over
			 */
			showMoreOptionsOnFilterOver: () => LocalizedString
			/**
			 * Show event as modal
			 */
			showEventAsModal: () => LocalizedString
		}
	}
	navbar: {
		/**
		 * Menu
		 */
		menu: () => LocalizedString
		/**
		 * Home
		 */
		home: () => LocalizedString
		/**
		 * Database
		 */
		database: () => LocalizedString
		/**
		 * Exhibitions
		 */
		exhibitions: () => LocalizedString
	}
	commons: {
		/**
		 * Year
		 */
		year: () => LocalizedString
		/**
		 * Hi
		 */
		hallo: () => LocalizedString
		/**
		 * en-GB
		 */
		codeLang: () => LocalizedString
	}
}

export type Formatters = {}
